CREATE TABLE IF NOT EXISTS users (
    `id` INTEGER PRIMARY KEY AUTO_INCREMENT,
    `username` VARCHAR(32) NOT NULL,
    `email` VARCHAR(64) NOT NULL,
    `password` VARCHAR(255) NOT NULL,
    `created` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE(`username`),
    UNIQUE(`email`)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS playlists (
    `id` INTEGER PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(64) NOT NULL,
    `created` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `user_id` INTEGER NOT NULL,
    FOREIGN KEY (`user_id`)
    REFERENCES users(`id`)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS songs (
    `id` INTEGER PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(64) NOT NULL,
    `url` VARCHAR(255) NOT NULL,
    `youtube_id` VARCHAR(64) NOT NULL,
    UNIQUE (`youtube_id`)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS playlist_items (
    `id` INTEGER PRIMARY KEY AUTO_INCREMENT,
    `song_id` INTEGER,
    `playlist_id` INTEGER,
    FOREIGN KEY (`song_id`)
    REFERENCES songs(`id`),
    FOREIGN KEY (`playlist_id`)
    REFERENCES playlists(`id`),
    UNIQUE (`song_id`, `playlist_id`)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS upvotes (
    `id` INTEGER PRIMARY KEY AUTO_INCREMENT,
    `created` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
    `user` INTEGER,
    `playlist_item` INTEGER,
    FOREIGN KEY (`user`)
    REFERENCES users(`id`),
    FOREIGN KEY (`playlist_item`)
    REFERENCES playlist_items(`id`),
    UNIQUE (`user`, `playlist_item`)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;
